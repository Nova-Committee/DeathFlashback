plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'com.modrinth.minotaur' version '2.1.1'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "-mc" + project.minecraft_version
group = project.maven_group

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "dev.intelligentcreations.mudrock:mudrock-mc1.18.2:0.1.1"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

import com.modrinth.minotaur.dependencies.ModDependency
modrinth {
    // Set the API token from the environment
    token = System.getenv('MODRINTH_TOKEN') ?: ''
    // Set whether debug mode is enabled
    debugMode = System.getenv('MODRINTH_DEBUG') as boolean ?: false
    // Set the project id
    projectId = project.mr_project_id
    // Set the release name
    versionName = "${project.mod_name} v${project.mod_version} for Minecraft ${project.minecraft_version}"
    // Set the release type
    versionType = project.mod_version.contains('alpha') ? 'alpha' : project.mod_version.contains('beta') ? 'beta' : 'release'
    // Set the release version
    versionNumber = project.mod_version
    // Set the release notes
    changelog = "For a list of changes, please refer to https://github.com/${project.github_repo}/releases/tag/${project.mod_version}"
    // Add all supported mod loaders
    loaders = ['fabric', 'quilt']
    // Add all supported game versions
    project.mr_game_versions.split(', ').each { gameVersions.add it }
    // Add the main artifact
    uploadFile = remapJar
    // Add any additional artifacts
    additionalFiles.add sourcesJar
    additionalFiles.add jar
    subprojects.each {
        additionalFiles.add it.remapJar
        additionalFiles.add it.sourcesJar
        additionalFiles.add it.jar
    }
    // Add any dependencies
    if (project.mr_relations_required) dependencies.addAll project.mr_relations_required.split(', ').collect { new ModDependency(it, 'required') }
    if (project.mr_relations_optional) dependencies.addAll project.mr_relations_optional.split(', ').collect { new ModDependency(it, 'optional') }
    if (project.mr_relations_incompatible) dependencies.addAll project.mr_relations_incompatible.split(', ').collect { new ModDependency(it, 'incompatible') }
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		maven {
            name 'GitHub'
            url "https://maven.pkg.github.com/${project.github_repo}"
            credentials {
                username System.getenv('GITHUB_ACTOR')
                password System.getenv('GITHUB_TOKEN')
            }
        }
	}
}

publish.finalizedBy tasks.modrinth
